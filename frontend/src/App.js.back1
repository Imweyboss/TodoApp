import React, { useState, useEffect } from 'react';
import axios from 'axios';
import 'bootstrap/dist/css/bootstrap.min.css';

function App() {
  const [todos, setTodos] = useState([]);
  const [inputValue, setInputValue] = useState('');
  const [users, setUsers] = useState([]);
  const [registerData, setRegisterData] = useState({ username: "", email: "", password: "" });

  const registerUser = async () => {
    try {
      await axios.post("http://0.0.0.0:5001/register", registerData);
      fetchUsers();
      setRegisterData({ username: "", email: "", password: "" });
    } catch (error) {
      console.error("Registration error:", error.response.data.message);
    }
  };

  useEffect(() => {
    fetchTodos();
    fetchUsers();
  }, []);

  const fetchUsers = async () => {
    const response = await axios.get("http://0.0.0.0:5001/users");
    setUsers(response.data);
  };

  const fetchTodos = async () => {
    const response = await axios.get('http://0.0.0.0:5001/todos');
    setTodos(response.data);
  };

  const addTodo = async () => {
    if (inputValue.trim() !== '') {
      const newTodo = {
        title: inputValue,
        completed: false,
      };
      await axios.post('http://0.0.0.0:5001/todos', newTodo);
      setInputValue('');
      fetchTodos();
    }
  };

  const updateTodo = async (id, completed) => {
    await axios.put(`http://0.0.0.0:5001/todos/${id}`, { completed: !completed });
    fetchTodos();
  };

  const deleteTodo = async (id) => {
    await axios.delete(`http://0.0.0.0:5001/todos/${id}`);
    fetchTodos();
  };

  return (
    <div className="container">
     <div className="register-form mb-5">
        <h2>Register</h2>
        <div className="form-group">
          <label htmlFor="username">Username</label>
          <input
            type="text"
            className="form-control"
            id="username"
            value={registerData.username}
            onChange={(e) => setRegisterData({ ...registerData, username: e.target.value })}
          />
        </div>
        <div className="form-group">
          <label htmlFor="email">Email address</label>
          <input
            type="email"
            className="form-control"
            id="email"
            value={registerData.email}
            onChange={(e) => setRegisterData({ ...registerData, email: e.target.value })}
          />
        </div>
        <div className="form-group">
          <label htmlFor="password">Password</label>
          <input
            type="password"
            className="form-control"
            id="password"
            value={registerData.password}
            onChange={(e) => setRegisterData({ ...registerData, password: e.target.value })}
          />
        </div>
        <button className="btn btn-primary" onClick={registerUser}>
          Register
        </button>
      </div>
           <h1 className="text-center mt-5">Todo App</h1>
      <div className="input-group mb-3">
        <select className="custom-select mr-3" style={{ width: "auto" }}>
          {users.map((user) => (
            <option key={user._id} value={user._id}>
              {user.username}
            </option>
          ))}
        </select>
        <input
          type="text"
          className="form-control"
          placeholder="Enter a new todo"
          value={inputValue}
          onChange={(e) => setInputValue(e.target.value)}
        />
        <div className="input-group-append">
          <button className="btn btn-primary" onClick={addTodo}>
            Add Todo
          </button>
        </div>
      </div>
      <ul className="list-group">
        {todos.map((todo) => (
          <li key={todo._id} className="list-group-item d-flex justify-content-between align-items-center">
            <div>
              <input
                type="checkbox"
                className="mr-2"
                checked={todo.completed}
                onChange={() => updateTodo(todo._id, todo.completed)}
              />
              {todo.title}
            </div>
            <button className="btn btn-danger" onClick={() => deleteTodo(todo._id)}>
              Delete
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
